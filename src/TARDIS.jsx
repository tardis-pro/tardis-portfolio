/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { materialBorderGen } from "./bordershader";






export function Model(props) {
  const { nodes, materials } = useGLTF("/TARDIS.glb");
  console.log(nodes)
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Roundcube001.geometry}
        material={materialBorderGen(nodes.Roundcube001.geometry)}
        position={[0, 2.7, 0]}
      />
      <group position={[0, 0.05, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Base_1.geometry}
          material={materialBorderGen(nodes.Base_1.geometry)}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Base_2.geometry}
          material={materialBorderGen(nodes.Base_2.geometry)}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Pillar_Tops.geometry}
          material={materialBorderGen(nodes.Pillar_Tops.geometry)}
          position={[-0.57, 2.35, 0.57]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Window_Frame.geometry}
          material={materialBorderGen(nodes.Window_Frame.geometry)}
          position={[0.53, 1.51, 0.24]}
          rotation={[0, Math.PI / 2, 0]}
        >
          <group
            position={[0, 0.21, 0]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={[0.49, 1, 0.57]}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Window_Glass_1.geometry}
              material={materialBorderGen(nodes.Window_Glass_1.geometry)}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Window_Glass_2.geometry}
              material={materialBorderGen(nodes.Window_Glass_2.geometry)}
            />
          </group>
        </mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Window_Frame003.geometry}
          material={materialBorderGen(nodes.Window_Frame003.geometry)}
          position={[0.53, 1.51, -0.24]}
          rotation={[0, Math.PI / 2, 0]}
        >
          <group
            position={[0, 0.21, 0]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={[0.49, 1, 0.57]}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Window_Glass003_1.geometry}
              material={materialBorderGen(nodes.Window_Glass003_1.geometry)}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Window_Glass003_2.geometry}
              material={materialBorderGen(nodes.Window_Glass003_2.geometry)}
            />
          </group>
        </mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Window_Frame004.geometry}
          material={materialBorderGen(nodes.Window_Frame004.geometry)}
          position={[0.24, 1.51, -0.53]}
          rotation={[Math.PI, 0, Math.PI]}
        >
          <group
            position={[0, 0.21, 0]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={[0.49, 1, 0.57]}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Window_Glass004_1.geometry}
              material={materialBorderGen(nodes.Window_Glass004_1.geometry)}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Window_Glass004_2.geometry}
              material={materialBorderGen(nodes.Window_Glass004_1.geometry)}
            />
          </group>
        </mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Window_Frame005.geometry}
          material={materialBorderGen(nodes.Window_Frame005.geometry)}
          position={[-0.24, 1.51, -0.53]}
          rotation={[Math.PI, 0, Math.PI]}
        >
          <group
            position={[0, 0.21, 0]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={[0.49, 1, 0.57]}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Window_Glass005_1.geometry}
              material={materialBorderGen(nodes.Window_Glass004_1.geometry)}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Window_Glass005_2.geometry}
              material={materialBorderGen(nodes.Window_Glass004_1.geometry)}
            />
          </group>
        </mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Window_Frame006.geometry}
          material={materialBorderGen(nodes.Window_Frame006.geometry)}
          position={[-0.53, 1.51, -0.24]}
          rotation={[0, -1.57, 0]}
        >
          <group
            position={[0, 0.21, 0]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={[0.49, 1, 0.57]}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Window_Glass006_1.geometry}
              material={materialBorderGen(nodes.Window_Glass006_1.geometry)}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Window_Glass006_2.geometry}
              material={materialBorderGen(nodes.Window_Glass006_1.geometry)}
            />
          </group>
        </mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Window_Frame007.geometry}
          material={materialBorderGen(nodes.Window_Frame007.geometry)}
          position={[-0.53, 1.51, 0.24]}
          rotation={[0, -1.57, 0]}
        >
          <group
            position={[0, 0.21, 0]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={[0.49, 1, 0.57]}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Window_Glass007_1.geometry}
              material={materialBorderGen(nodes.Window_Glass006_1.geometry)}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Window_Glass007_2.geometry}
              material={materialBorderGen(nodes.Window_Glass006_1.geometry)}
            />
          </group>
        </mesh>
        <group position={[-0.46, 1, 0.53]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Ceiling_1.geometry}
            material={materialBorderGen(nodes.Ceiling_1.geometry)}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Ceiling_2.geometry}
            material={materialBorderGen(nodes.Ceiling_2.geometry)}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Signs_1.geometry}
            material={materialBorderGen(nodes.Signs_1.geometry)}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Signs_2.geometry}
            material={materialBorderGen(nodes.Signs_2.geometry)}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Signs_3.geometry}
            material={materialBorderGen(nodes.Signs_3.geometry)}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Door_Top_Trim.geometry}
            material={materialBorderGen(nodes.Door_Top_Trim.geometry)}
          />
        </group>
        <group position={[-0.48, 1, 0.53]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Door_Left_1.geometry}
            material={materialBorderGen(nodes.Door_Left_1.geometry)}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Door_Left_2.geometry}
            material={materialBorderGen(nodes.Door_Left_2.geometry)}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Window_Frame001.geometry}
            material={materialBorderGen(nodes.Window_Frame001.geometry)}
            position={[0.22, 0.51, 0]}
          >
            <group
              position={[0, 0.21, 0]}
              rotation={[Math.PI / 2, 0, 0]}
              scale={[0.49, 1, 0.57]}
            >
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Window_Glass001_1.geometry}
                material={materialBorderGen(nodes.Window_Glass001_1.geometry)}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Window_Glass001_2.geometry}
                material={materialBorderGen(nodes.Window_Glass001_2.geometry)}
              />
            </group>
          </mesh>
          <group
            position={[0.41, 0, 0.04]}
            rotation={[Math.PI / 2, 0, 0]}
            scale={0.03}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Yale_Lock_1.geometry}
              material={materialBorderGen(nodes.Yale_Lock_1.geometry)}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Yale_Lock_2.geometry}
              material={materialBorderGen(nodes.Yale_Lock_2.geometry)}
            />
          </group>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Pull_to_Open_Panel_1.geometry}
            material={materialBorderGen(nodes.Pull_to_Open_Panel_1.geometry)}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Pull_to_Open_Panel_2.geometry}
            material={materialBorderGen(nodes.Pull_to_Open_Panel_2.geometry)}
          />
        </group>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Roof.geometry}
          material={materialBorderGen(nodes.Roof.geometry)}
          position={[0, 2.39, 0]}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Lamp_Base.geometry}
            material={materialBorderGen(nodes.Lamp_Base.geometry)}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Lamp_Bottom.geometry}
              material={materialBorderGen(nodes.Lamp_Bottom.geometry)}
              position={[0, 0.12, 0]}
            >
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Lamp_Lens.geometry}
                material={materialBorderGen(nodes.Lamp_Lens.geometry)}
                position={[0, 0.08, 0]}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Lamp_Struts.geometry}
                material={materialBorderGen(nodes.Lamp_Struts.geometry)}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Lamp_Top.geometry}
                material={materialBorderGen(nodes.Lamp_Top.geometry)}
                position={[0, 0.14, 0]}
              />
            </mesh>
          </mesh>
        </mesh>
        <group position={[0.46, 1, 0.53]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Door_Right_1.geometry}
            material={materialBorderGen(nodes.Door_Right_1.geometry)}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Door_Right_2.geometry}
            material={materialBorderGen(nodes.Door_Right_2.geometry)}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Window_Frame002.geometry}
            material={materialBorderGen(nodes.Window_Frame002.geometry)}
            position={[-0.22, 0.51, 0]}
          >
            <group
              position={[0, 0.21, 0]}
              rotation={[Math.PI / 2, 0, 0]}
              scale={[0.49, 1, 0.57]}
            >
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Window_Glass002_1.geometry}
                material={materialBorderGen(nodes.Window_Glass002_1.geometry)}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Window_Glass002_2.geometry}
                material={materialBorderGen(nodes.Window_Glass002_2.geometry)}
              />
            </group>
          </mesh>
        </group>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Pillars.geometry}
          material={materialBorderGen(nodes.Pillars.geometry)}
          position={[-0.56, 0, 0.56]}
          rotation={[0, 1.57, 0]}
        />
        <group position={[0.53, 1, -0.46]} rotation={[0, 1.57, 0]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Walls_1.geometry}
            material={materialBorderGen(nodes.Walls_1.geometry)}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Walls_2.geometry}
            material={materialBorderGen(nodes.Walls_2.geometry)}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Wall_Trim.geometry}
            material={materialBorderGen(nodes.Wall_Trim.geometry)}
            position={[-0.46, -1, 0.04]}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/TARDIS.glb");